"use client";

import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Calendar } from "@/components/ui/calendar";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Plus, Eye } from "lucide-react";
import Link from "next/link";
import { useState } from "react";

// Data model for a sales record
interface SaleRecord {
  id: number;
  external_id: string; // varchar(100), not null, auto-generated
  client_ext_id: string; // varchar(100), not null, auto-generated
  total_amount: number; // decimal, not null
  date_purchased: string; // datetime, not null
  payment_method: string; // varchar(100), not null
  created_at: string; // datetime, not null, default current_timestamp
  created_by: string; // varchar(100), not null
  deleted_at?: string; // datetime, nullable
  deleted_by?: string; // varchar(100), nullable
}

export default function CreateReceiptPage() {
  const [sale, setSale] = useState<SaleRecord>({
    id: 0,
    external_id: "", // Will be auto-generated by backend
    client_ext_id: "", // Will be auto-generated by backend
    total_amount: 0,
    date_purchased: new Date().toISOString().slice(0, 16), // Format: YYYY-MM-DDThh:mm
    payment_method: "Cash",
    created_at: new Date().toISOString(),
    created_by: "",
    deleted_at: undefined,
    deleted_by: undefined,
  });

  // Handler for input changes
  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setSale((prev) => ({ ...prev, [name]: value }));
  };

  return (
    <div className="min-h-screen bg-[#fafafa] p-4 md:p-8">
      <div className="flex justify-between items-center mb-2">
        <div className="flex items-center gap-2">
          <Link href="/sales" className="text-lg font-medium">← Create Receipt</Link>
        </div>
        <div className="flex gap-2 items-center">
          <Button variant="ghost" size="icon"><Eye /></Button>
          <Button>Save</Button>
        </div>
      </div>
      <div className="flex flex-col lg:flex-row gap-8 mt-4">
        {/* Main Form */}
        <div className="flex-1 bg-white rounded-lg shadow-sm p-6">
          <h2 className="text-xl font-semibold mb-6">Receipt #0001001</h2>
          
          {/* Sale Record Form */}
          <form className="space-y-4 mb-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block mb-1">Total Amount</label>
                <Input
                  name="total_amount"
                  type="number"
                  value={sale.total_amount}
                  onChange={handleChange}
                  required
                  step="0.01"
                  min="0"
                />
              </div>
              <div>
                <label className="block mb-1">Date Purchased</label>
                <Input
                  name="date_purchased"
                  type="datetime-local"
                  value={sale.date_purchased}
                  onChange={handleChange}
                  required
                />
              </div>
              <div>
                <label className="block mb-1">Payment Method</label>
                <Select
                  name="payment_method"
                  value={sale.payment_method}
                  onValueChange={(value) => setSale(prev => ({ ...prev, payment_method: value }))}
                >
                  <SelectTrigger>
                    <SelectValue placeholder="Select payment method" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="Cash">Cash</SelectItem>
                    <SelectItem value="Card">Card</SelectItem>
                    <SelectItem value="Bank Transfer">Bank Transfer</SelectItem>
                    <SelectItem value="Other">Other</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div>
                <label className="block mb-1">Created By</label>
                <Input
                  name="created_by"
                  value={sale.created_by}
                  onChange={handleChange}
                  maxLength={100}
                  required
                  placeholder="Enter creator's name"
                />
              </div>
            </div>
          </form>

          <div className="mb-6">
            <div className="font-medium mb-2">Item</div>
            <Button variant="link" className="p-0 h-auto text-blue-600"><Plus className="inline-block mr-1" size={18}/>Add item</Button>
          </div>
          <div className="mb-6">
            <div className="flex flex-col gap-2">
              <div className="flex items-center justify-between">
                <span className="font-medium">Subtotal (PHP)</span>
                <span className="font-semibold">₱0.00</span>
              </div>
            </div>
          </div>
          <div className="flex items-center justify-between text-lg font-semibold mb-6">
            <span>Total (PHP)</span>
            <span>₱0.00</span>
          </div>
          <div>
            <div className="font-medium mb-2">Notes</div>
            <Button variant="link" className="p-0 h-auto text-blue-600"><Plus className="inline-block mr-1" size={18}/>Add note</Button>
          </div>
        </div>
        {/* Sidebar */}
        <div className="flex flex-col gap-6 w-full lg:w-[340px]">
          <div className="bg-white rounded-lg shadow-sm p-6 mb-2">
            <div className="font-semibold mb-4">Receipt Terms</div>
            <div className="mb-4">
              <label className="block text-sm mb-1">Date issued</label>
              <Input 
                type="datetime-local" 
                value={sale.created_at.slice(0, 16)} 
                readOnly 
                className="cursor-pointer" 
              />
            </div>
          </div>
          <div className="bg-white rounded-lg shadow-sm p-6">
            <div className="font-semibold mb-4">Payment Method</div>
            <label className="block text-sm mb-1">Mode of payment</label>
            <Select 
              value={sale.payment_method}
              onValueChange={(value) => setSale(prev => ({ ...prev, payment_method: value }))}
            >
              <SelectTrigger className="w-full">
                <SelectValue placeholder="Select payment method" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="Cash">Cash</SelectItem>
                <SelectItem value="Card">Card</SelectItem>
                <SelectItem value="Bank Transfer">Bank Transfer</SelectItem>
                <SelectItem value="Other">Other</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>
      </div>
    </div>
  );
}
